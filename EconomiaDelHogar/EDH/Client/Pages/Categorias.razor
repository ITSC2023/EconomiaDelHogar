@page "/categorias"
@using EDH.Shared.Modelos;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using EDH.Shared
@attribute [Authorize]
@inject HttpClient Http


<h3>Categorias</h3>

@if (categorias == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-hover">
        <thead>
            <tr>

                <th>Nombre</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var categoria in categorias)
            {
                <tr>
                    <td><i class=@categoria.Icono></i> @categoria.Nombre</td>
                    <div class="d-grid gap-2 d-md-block">
                    <td><button class="btn btn-success"><i class="bi bi-pencil-square"></i></button></td>
                    <td><button class="btn btn-danger"><i class="bi bi-trash3"></i></button></td>
                    </div>
                </tr>

            }
        </tbody>
    </table>
}


<p>Completa los campos para agregar una nueva categoria</p>
 

<EditForm Model="formulario" OnSubmit=@(()=> AgregarCategoria())>
    <fieldset>
        <div class="row">
            <div class="col-md-6">

                <InputText class="form-control" placeholder="Nombre" id="Nombre" aria-label="Nombre de la Categoria" @bind-Value=@formulario.Nombre />
            </div>
            
            <div class="col-md-2">
                <input class="btn btn-outline-primary" type="submit" value="Agregar" />
            </div>
        </div>
    </fieldset>
</EditForm>

@code {

    private Categoria[]? categorias;


    public Categoria formulario { get; set; } = new();

    public async Task AgregarCategoria()
    {
        Console.WriteLine($"Se agrego una nueva categoria con nombre {formulario.Nombre} {formulario.Icono}");
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            categorias = await Http.GetFromJsonAsync<Categoria[]>("Categorias");

        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }


    }


}
